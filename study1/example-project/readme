### 前端的部署

自己创建项目目录
cd /workspace/src/study1/example-project
vue init webpack  YunweiVuePage



? Project name yunweivuepage
? Project description A Vue.js project
? Author maomao
? Vue build standalone
? Install vue-router? Yes
? Use ESLint to lint your code? Yes
? Pick an ESLint preset Standard
? Set up unit tests No
? Setup e2e tests with Nightwatch? No
? Should we run `npm install` for you after the project has been created? (recommended) npm

   vue-cli · Generated "YunweiVuePage".
# Project initialization finished!
# ========================

To get started:

  cd YunweiVuePage
  npm run dev


1. 本项目前端采用 iview-admin

https://github.com/hanjiangxueying/vue2-iview2-admin.git

参考：
https://github.com/iview/iview-admin
https://www.oschina.net/news/89684/iview-2-5-0

2. 安装包

npm install vuex




======后端的部署


golang 在 github 上建立了一个镜像库，如 https://github.com/golang/sys 即是 https://golang.org/x/sys 的镜像库

✔️ 正确操作方式

# 跳转到自己的$GOPATH文件夹
cd ~/go/src
# 创建文件夹
mkdir -p golang.org/x
cd golang.org/x
# 拉取github上的golang库包
git clone https://github.com/golang/sys.git
git clone https://github.com/golang/text.git
————————————————

解决：error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 54
   fatal: the remote end hung up unexpectedly
   fatal: early EOF
   fatal: index-pack failed

原因： 文件过大，修改buffer 11512M

修改$ git config https.postBuffer 11524288000


-----------------



1. 安装代码中所有的依赖包

首先： go get -v -u  github.com/fsnotify/fsnotify （需要先安装sys）
go get -u -v github.com/spf13/viper
安装godep包： go get -u -v github.com/tools/godep

成功安装后，在$GOPATH的bin目录下会有一个godep可执行的二进制文件，后面执行的命令都是用这个，建议这个目录加入到全局环境变量中


$ go get -u -v github.com/tools/godep
github.com/tools/godep (download)
github.com/tools/godep/vendor/github.com/kr/text
github.com/tools/godep/vendor/github.com/pmezard/go-difflib/difflib
github.com/tools/godep/vendor/github.com/kr/fs
github.com/tools/godep/vendor/github.com/kr/pretty
github.com/tools/godep/vendor/golang.org/x/tools/go/vcs
github.com/tools/godep


2. 下载项目中的依赖包

/goworkspace/bin/godep get -v


###### 权限的介绍：

某个组拥有对应的菜单权限和api权限。
某一个用户属于 一个组， 拥有这个组对应的权限

==========

dodep的使用：

godep save     将依赖项输出并复制到Godeps.json文件中
godep go       使用保存的依赖项运行go工具
godep get      下载并安装具有指定依赖项的包
godep path     打印依赖的GOPATH路径
godep restore  在GOPATH中拉取依赖的版本


https://www.liwenzhou.com/posts/Go/go_dependency/